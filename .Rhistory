library(HnndPR)
file.path('e:', "Samusik/data/Samusik_01.fcs")
source('F:/Download_code/TPE/tpe/R/HnndPR/R/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/R/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/R/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/R/test_HNND_pattern_recognition.R', echo=TRUE)
source('F:/Download_code/TPE/tpe/R/HnndPR/R/test_HNND_pattern_recognition.R', echo=TRUE)
source('F:/Download_code/TPE/tpe/R/HnndPR/R/test_HNND_pattern_recognition.R')
library(HnndPR)
library(HnndPR)
clc
clear all
clc
library(HnndPR)
devtools::use_vignette("introduction")
library("devtools")
v
library(roxygen2)
library(HnndPR)
document()
library(HnndPR)
library(HnndPR)
document()
library(HnndPR)
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
library(HnndPR)
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/R/load_data.R', encoding = 'UTF-8', echo=TRUE)
data('single.cell.mrna.pollen')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R', echo=TRUE)
load_data('single.cell.mrna.pollen')
source('F:/Download_code/TPE/tpe/R/HnndPR/R/load_data.R', encoding = 'UTF-8', echo=TRUE)
data('single.cell.mrna.pollen')
data('single.cell.mrna.pollen')
single.cell.mrna.pollen$x
x = single.cell.mrna.pollen$x
library('HnndPR')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
debugSource('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
data_name
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
library(HnndPR)
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
load("bipolar_pca100.Rdata")
load("bipolar_pca100.Rdata")
data("bipolar_pca100.Rdata")
data_name == 'bipolar'
library(HnndPR)
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
flowCore::exprs(flowCore::read.FCS(files[[data_name]], transformation = FALSE, truncate_max_range = FALSE))
files <- list(
Samusik_01   = "Samusik_01.fcs",
Samusik_all  = "Samusik_all.fcs"
)
data_name
files[[data_name]]
flowCore::read.FCS(files[[data_name]], transformation = FALSE, truncate_max_range = FALSE)
a = flowCore::read.FCS(files[[data_name]], transformation = FALSE, truncate_max_range = FALSE)
a = flowCore::read.FCS(files[[data_name]], transformation = FALSE, truncate_max_range = FALSE)
a = flowCore::read.FCS(files[[data_name]], transformation = FALSE, truncate_max_range = FALSE)
a = flowCore::read.FCS(files[[data_name]], transformation = FALSE, truncate_max_range = FALSE)
a = flowCore::read.FCS(files[[data_name]], transformation = FALSE, truncate_max_range = FALSE)
a = flowCore::read.FCS(files[[data_name]], transformation = FALSE, truncate_max_range = FALSE)
library(flowCore)
a = read.FCS(files[[data_name]], transformation = FALSE, truncate_max_range = FALSE)
files[[data_name]]
files <- list(
Samusik_01   = "Samusik_01.fcs",
Samusik_all  = "Samusik_all.fcs"
)
library(HnndPR)
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
library(HnndPR)
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
files <- list(
Samusik_01   = "Samusik_01.fcs",
Samusik_all  = "Samusik_all.fcs"
)
x <- flowCore::exprs(flowCore::read.FCS(files[[data_name]], transformation = FALSE, truncate_max_range = FALSE))
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
document()
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
document()
library(HnndPR)
document()
library("HnndPR", lib.loc="F:/R/R-3.5.1/library")
library(HnndPR)
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
library(HnndPR)
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
document()
library("HnndPR", lib.loc="F:/R/R-3.5.1/library")
library(HnndPR)
library(HnndPR)
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
library(HnndPR)
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
library(HnndPR)
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
result_all = rbind(result_all,data.frame(
DataName = data_name,
N = N,
Dim = ncol(TestData$x),
NMI = round(CScores$NMI,digits = 3),
ARI = round(CScores$ARI,digits = 3),
Totoltime = round(Totoltime-result$time_DG,digits = 3),
Cnum = length(unique(result$Label))))
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R', echo=TRUE)
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPRdata/Clustering-by-HNND-PR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPRdata/Clustering-by-HNND-PR/test/test_HNND_pattern_recognition.R')
source('F:/Download_code/TPE/tpe/R/HnndPRdata/Clustering-by-HNND-PR/test/test_HNND_pattern_recognition.R')
library('HnndPR')
# datasets ----------------------------------------------------------------
data_names_ori = 'cytof_h1'
data_name = 'cytof_h1'
TestData=load_data(data_name)
N = nrow(TestData$x)
K_empircal = ceiling(log2(N))
result <- HNND(
x = TestData$x,
K = K_empircal,h = K_empircal)
CScores = Evaluate_clustering_result(data_name,result$Label,TestData$annotation_data,EvaIndex = c('NMI','ARI'))
round(CScores$NMI,digits = 3)
round(CScores$ARI,digits = 3)
rm(list = ls())
load_data(data_name)
load_data('cytof_h1')
Rdata('cytof_h1')
load('cytof_h1')
data('cytof_h1')
data('data/cytof_h1')
data('/data/cytof_h1')
data('data/cytof.benchmark.h1.rda')
Rdata('data/cytof.benchmark.h1.rda')
load('data/cytof.benchmark.h1.rda')
TestData=load_data('cytof_h1')
N = nrow(TestData$x)
K = ceiling(log2(N))
result <- HNND(
x = TestData$x,
K = K_empircal,
h = K_empircal,
disName = "euclidean",
LogPlot = '')
TestData=load_data('cytof_h1')
N = nrow(TestData$x)
K = ceiling(log2(N))
result <- HNND(
x = TestData$x,
K = K,
h = K,
disName = "euclidean",
LogPlot = '')
CScores = Evaluate_clustering_result(data_name,result$Label,TestData$annotation_data,EvaIndex = c('NMI','ARI'))
result_all = rbind(result_all,data.frame(
DataName = data_name,
N = N,
Dim = ncol(TestData$x),
NMI = round(CScores$NMI,digits = 3),
ARI = round(CScores$ARI,digits = 3),
Totoltime = round(Totoltime-result$time_DG,digits = 3),
Cnum = length(unique(result$Label))))
print(result_all)
CScores = Evaluate_clustering_result(data_name,result$Label,TestData$annotation_data,EvaIndex = c('NMI','ARI'))
data_name = 'cytof_h1'
CScores = Evaluate_clustering_result(data_name,result$Label,TestData$annotation_data,EvaIndex = c('NMI','ARI'))
result_all = rbind(result_all,data.frame(
DataName = data_name,
N = N,
Dim = ncol(TestData$x),
NMI = round(CScores$NMI,digits = 3),
ARI = round(CScores$ARI,digits = 3),
Totoltime = round(Totoltime-result$time_DG,digits = 3),
Cnum = length(unique(result$Label))))
print(result_all)
result_all = rbind(result_all,data.frame(
DataName = data_name,
N = N,
Dim = ncol(TestData$x),
NMI = round(CScores$NMI,digits = 3),
ARI = round(CScores$ARI,digits = 3),
Totoltime = round(Totoltime-result$time_DG,digits = 3),
Cnum = length(unique(result$Label))))
data_name
round(CScores$NMI,digits = 3)
round(CScores$ARI,digits = 3)
round(Totoltime-result$time_DG,digits = 3)
source('F:/Download_code/TPE/tpe/R/HnndPRdata/Clustering-by-HNND-PR-Github/test/Demo1.R')
round(Totoltime-result$time_DG,digits = 3)
length(unique(result$Label)))
length(unique(result$Label))
data_name
result_all = rbind(result_all,data.frame(
DataName = data_name,
N = N,
Dim = ncol(TestData$x),
NMI = round(CScores$NMI,digits = 3),
ARI = round(CScores$ARI,digits = 3),
Totoltime = round(Totoltime-result$time_DG,digits = 3),
Cnum = length(unique(result$Label))))
round(CScores$NMI,digits = 3)
ncol(TestData$x)
data_name
result = data.frame(
DataName = data_name,
N = N,
Dim = ncol(TestData$x),
NMI = round(CScores$NMI,digits = 3),
ARI = round(CScores$ARI,digits = 3),
Totoltime = round(Totoltime-result$time_DG,digits = 3),
Cnum = length(unique(result$Label)))
print(result)
result = data.frame(
DataName = data_name,
N = N,
Dim = ncol(TestData$x),
NMI = round(CScores$NMI,digits = 3),
ARI = round(CScores$ARI,digits = 3),
Totoltime = round(Totoltime-result$time_DG,digits = 3),
ClusterNumber = length(unique(result$Label)))
print(result)
result = data.frame(
DataName = data_name,
N = N,
Dim = ncol(TestData$x),
NMI = round(CScores$NMI,digits = 3),
ARI = round(CScores$ARI,digits = 3),
Totoltime = round(Totoltime-result$time_DG,digits = 3),
ClusterNumber = length(unique(result$Label)))
result = data.frame(
DataName = data_name,
N = N,
Dim = ncol(TestData$x),
NMI = round(CScores$NMI,digits = 3),
ARI = round(CScores$ARI,digits = 3),
Totoltime = round(Totoltime-result$time_DG,digits = 3),
Cnum = length(unique(result$Label)))
result = data.frame(
DataName = data_name,
N = N,
Dim = ncol(TestData$x),
NMI = round(CScores$NMI,digits = 3),
ARI = round(CScores$ARI,digits = 3),
Totoltime = round(Totoltime-result$time_DG,digits = 3),
Cnum = length(unique(result$Label)))
data.frame(
DataName = data_name,
N = N,
Dim = ncol(TestData$x),
NMI = round(CScores$NMI,digits = 3),
ARI = round(CScores$ARI,digits = 3),
Totoltime = round(Totoltime-result$time_DG,digits = 3),
Cnum = length(unique(result$Label)))
a = data.frame(
DataName = data_name,
N = N,
Dim = ncol(TestData$x),
NMI = round(CScores$NMI,digits = 3),
ARI = round(CScores$ARI,digits = 3),
Totoltime = round(Totoltime-result$time_DG,digits = 3),
Cnum = length(unique(result$Label)))
a
source('F:/Download_code/TPE/tpe/R/HnndPRdata/Clustering-by-HNND-PR-Github/test/Demo1.R')
library(HnndPR)
library(HnndPR)
library(HnndPR)
roxygenize('.')
library(roxygen2)
roxygenize('.')
roxygenize('.')
library(HnndPR)
devtools::document()
devtools::document()
library(HnndPR)
devtools::document()
devtools::document()
library(HnndPR)
cl()
clear
clear all
cl(list())
c(list())
data_name = 'cytof_h1'
data(data_name)
data_name = 'cytof.benchmark.h1'
data(data_name)
data('cytof.benchmark.h1')
x = cytof.benchmark.h1$x
library(HnndPR)
devtools::document()
library(HnndPR)
devtools::document()
library(HnndPR)
devtools::document()
devtools::document()
devtools::document()
devtools::load_all(".")
library(HnndPR)
data('cytof.benchmark.h1')
x = cytof.benchmark.h1$x
K = ceiling(log2(nrow(x)))
result <- HNND_C(x = x,K = K,h = K,disName = "euclidean",LogPlot = '')
devtools::document()
source('F:/Download_code/TPE/tpe/R/HnndPRdata/Clustering-by-HNND-PR-Github/test/Demo1.R')
library("HnndPR", lib.loc="F:/R/R-3.5.1/library")
devtools::document()
library(HnndPR)
